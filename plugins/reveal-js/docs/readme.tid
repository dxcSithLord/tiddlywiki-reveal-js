creator: Sukima
title: $:/plugins/sukima/reveal-js/readme
type: text/vnd.tiddlywiki

This plugin embeds [[Reveal.js|https://revealjs.com]] presentations into a TiddlyWiki.

It uses two widgets `<$presentation>` and `<$slide>`. A simple example:

```xml
<$presentation>
<$slide>Welcome to ''Reveal.js''</$slide>
<$slide>Embedded inside TiddlyWiki</$slide>
<$slide>
  <$slide>Vertical Slides</$slide>
  <$slide>Can also me manged with one level of nesting</$slide>
</$slide>
</$presentation>
```

The embedded presentation is configured to capture keyboard input only when focused. This means that to open the presentation into fullscreen mode first click the presentation to set it as the focus then press <kbd>F</kbd> to have it open in fullscreen mode.

The content of the `<$slide>` can be WikiText including transcluded tiddlers.

A complementary plugin worth looking at: [[Talk Timer|https://sukima.github.io/tiddlywiki-talktimer]].

!! Usage

The documentation for Reveal.js explains the use of `<section>` with `data-*` attributes to control the slide options. With the above two Widgets the same options are supported.

Any options passed to `<$slide>` will be converted to from ''camelCase'' to their corresponding `data-*` attributes. See the [[documentation|https://revealjs.com/backgrounds/]] for the full list. Example:

```xml
<$slide backgroundColor="aquamarine">
Will make a `<section data-background-color="aquamarine">`
</$slide>
```

Any options passed to `<$presentation>` will be converted to `initialize(…)` options. See the [[documentation|https://revealjs.com/config/]] for the full list. Example:

```xml
<$presentation autoSlide="5000" loop>
<$slide>Slide will automatically move in 5 seconds</$slide>
<$slide>This is the second slide</$slide>
</$presentation>
```

!!! Default height

Because these presentations are embedded they must have a height. By default this is ''400px'' but can be overridden using the `$height` attribute.

```xml
<$presentation $height="600">
  …
</$presentation>
```

Any CSS unit is allowed but will default to `px` if no unit type is provided. For example `$height="1.2rem"` is also acceptable.

!! Using tiddlers for slides

It is also possible to have TiddlyWiki dynamically build the presentation for you using transclusion.

```xml
<$presentation>
<$list filter="[tag[slide]sort[title]]">
<$slide tiddlerTitle={{!!title}} backgroundColor={{!!color}}>
<$transclude mode="block" />
</$slide>
</$list>
</$presentation>
```

<small>`tiddlerTitle` is added so the rendered DOM node can have a `data-tiddler-title` attribute which a custom stylesheet could be used to further customize the slide.</small>

!! Code Blocks

Reveal.js uses it's own code highlighting mechanics. To make things compatible and animate smoothly we have a custom `<$slidecodeblock>` component which takes the same attributes as the <code>[[<$codeblock>|https://tiddlywiki.com/#CodeBlockWidget]]</code> and also the ''camelCased'' option that Reveal.js understands.

```xml
<$slidecodeblock language-"javascript" trim lineNumbers="3-5" code="""
import { tracked } from '@glimmer/tracking';
…
""" />
```

!! Technical Details

The `<$presentation>` widget will create the following markup and instantiate and initialize an instance of a `new Reveal(…)` presentation.

```xml
<div class="reveal">
  <div class="slides">
    …
  </div>
</div>
```

The `<$slide>` widget will generate a `<section>` converting the ''camelCase'' attributes to `data-*` attributes.

!! Known caveats

Tiddlers with an embedded presentation will ''not'' refresh when slides change. This is an unfortunate limitation with the Reveal.js library as it expects to be initialized once and not have the DOM mutate beneath it. This only affects dynamic adding and removing of slides via TiddlyWiki. Updating a slides content will be reflected in a currently rendered presentation. Close and reopen the presentation tiddler to get the updated slides.

The `hash` configuration options is not compatible with TiddlyWiki.

The Speaker notes does not work with TiddlyWiki as it depends on routing to the hash URL which TiddlyWiki intercepts.
